You can create a .gitignore file in your repository's root directory to tell 
Git which files and directories to ignore when you make a commit. To share 
the ignore rules with other users who clone the repository, commit the .gitignore 
file in to your repository.

GitHub maintains an official list of recommended .gitignore files for many 
popular operating systems, environments, and languages in the github/gitignore 
public repository. You can also use gitignore.io to create a .gitignore file 
for your operating system, programming language, or IDE. For more information, 
see 

"github/gitignore" 

and the 

"gitignore.io" 

site.

-------------------------------------------------------------------------

Create a .gitignore file for your repository.

$ touch .gitignore

-------------------------------------------------------------------------

If you want to ignore a file that is already checked in, you must untrack the 
file before you add a rule to ignore it. From your terminal, untrack the file.

$ git rm --cached FILENAME

-------------------------------------------------------------------------

You can also create a global .gitignore file to define a list of rules for 
ignoring files in every Git repository on your computer. For example, you might 
create the file at ~/.gitignore_global and add some rules to it.

Open Git Bash.

Configure Git to use the exclude file ~/.gitignore_global for all Git repositories.
$ git config --global core.excludesfile ~/.gitignore_global

-------------------------------------------------------------------------

If you don't want to create a .gitignore file to share with others, you can 
create rules that are not committed with the repository. You can use this 
technique for locally-generated files that you don't expect other users to 
generate, such as files created by your editor.

Use your favorite text editor to open the file called .git/info/exclude 
within the root of your Git repository. Any rule you add here will not be 
checked in, and will only ignore files for your local repository.

Open Git Bash.
Navigate to the location of your Git repository.
Using your favorite text editor, open the file .git/info/exclude.

-------------------------------------------------------------------------